version: 0.2

phases:
  pre_build:
    commands:
      - echo Log into AWS ECR
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo Logged in to AWS ECR successfully
  pre_build: 
    commands:
      - echo Starting Docker test...
      - docker run --rm -v $PWD:$PWD -w $PWD -v /var/run/docker.sock:/var/run/docker.sock maven:3 mvn verify
    finally: 
      - ls -la 
      - aws s3 rm s3://$IMAGE_REPO_NAME --recursive
      - aws s3 mb s3://$IMAGE_REPO_NAME
      - aws s3 sync . s3://$IMAGE_REPO_NAME
  build:
    commands:
      - echo Building the Docker image...
      - ls -la
      - echo $IMAGE_REPO_NAME:$IMAGE_TAG
      - echo $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Docker Image tagged with - $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
    finally: 
      - docker run --rm --entrypoint ls $IMAGE_REPO_NAME /tmp
      - docker run --rm --entrypoint cat $IMAGE_REPO_NAME /tmp/target/dependency-check-report.html > dependency-check-report.html
  post_build:
    commands:
      - echo Pushing docker image to ECR
      - ls -la
      - docker image ls
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Docker image pushed
      - printf '{"AWSEBDockerrunVersion":"1","Image":{"Name":"%s","Update":"true"},"Ports":[{"ContainerPort":"8080","HostPort":"8080"}],"EntryPoint":"java -jar /worldtime.jar"}' "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > Dockerrun.aws.json
      - ls -la
      - cat Dockerrun.aws.json
artifacts:
  files:
    - Dockerrun.aws.json
    - '**/*'
  name: myname-$(date +%Y-%m-%d) 
